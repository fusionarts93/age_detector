import cv2

# ==== Load pre-trained models ====
face_proto = "deploy.prototxt"
face_model = "res10_300x300_ssd_iter_140000.caffemodel"

age_proto = "age_deploy.prototxt"
age_model = "age_net.caffemodel"

# Mean values for model normalization (Caffe model requirement)
MODEL_MEAN_VALUES = (78.4263377603, 87.7689143744, 114.895847746)

# Age categories (depends on training dataset)
AGE_BUCKETS = ['(0-2)', '(4-6)', '(8-12)', '(15-20)', '(21-32)',
               '(33-43)', '(44-53)', '(60-100)']

# Load networks
face_net = cv2.dnn.readNet(face_model, face_proto)
age_net = cv2.dnn.readNet(age_model, age_proto)

# ==== Open webcam ====
cap = cv2.VideoCapture(0)

while True:
    ret, frame = cap.read()
    if not ret:
        break

    h, w = frame.shape[:2]
    blob = cv2.dnn.blobFromImage(frame, 1.0, (300, 300),
                                 [104.0, 177.0, 123.0], swapRB=False, crop=False)
    face_net.setInput(blob)
    detections = face_net.forward()

    for i in range(detections.shape[2]):
        confidence = detections[0, 0, i, 2]

        if confidence > 0.6:  # filter weak detections
            box = detections[0, 0, i, 3:7] * [w, h, w, h]
            (x1, y1, x2, y2) = box.astype("int")

            face = frame[y1:y2, x1:x2]
            blob2 = cv2.dnn.blobFromImage(face, 1.0, (227, 227),
                                          MODEL_MEAN_VALUES, swapRB=False)

            age_net.setInput(blob2)
            age_preds = age_net.forward()
            age = AGE_BUCKETS[age_preds[0].argmax()]
            label = f"Age: {age}"

            cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 255, 0), 2)
            cv2.putText(frame, label, (x1, y1 - 10),
                        cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 255, 255), 2)

    cv2.imshow("Age Detection", frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
